/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import { Html } from '@react-three/drei';
import { useFrame } from '@react-three/fiber';
import { useEffect, useRef, useState } from 'react';
import { Object3D } from 'three';
import { GLTFLoader } from 'three-stdlib';

type group = {
  current: {
    rotation: {
      x: number;
      y: number;
    };
  };
};

const initiaGroup = {
  rotation: {
    x: 0,
    y: 0,
  },
};

export default function XIGLogo() {
  /* Refs */
  const group: group = useRef(initiaGroup);

  /* State */
  const [model, setModel] = useState();

  /* Load model */
  useEffect(() => {
    const loader = new GLTFLoader();
    loader.load('xig-logo.gltf', async (gltf) => {
      const nodes = await gltf.parser.getDependencies('node');

      setModel(nodes[0]);
    });
  }, []);

  /* Animations */
  // rotate the model #1
  //   useFrame(() => {
  //     if (model) {
  //       group.current.rotation.y += 0.01;
  //     }
  //   });

  // rotate the model #2
  useFrame(() => {
    if (typeof group.current != 'undefined')
      return (group.current.rotation.y += 0.01);
  });

  const deg2rad = (degrees: number) => degrees * (Math.PI / 180);

  return (
    <>
      {model ? (
        <group ref={group} dispose={null}>
          <primitive
            position={[0, 3, 0]}
            scale={[0.062, 0.062, 0.062]}
            rotation={[deg2rad(90), deg2rad(0), deg2rad(0)]}
            ref={group}
            name="Object_0"
            object={model}
          />
        </group>
      ) : (
        <Html>Loading...</Html>
      )}
    </>
  );
}
